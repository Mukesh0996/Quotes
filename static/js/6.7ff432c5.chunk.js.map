{"version":3,"sources":["components/UI/Card.module.css","components/quotes/QuoteForm.module.css","components/UI/Card.js","components/quotes/QuoteForm.js","pages/AddQuote.js"],"names":["module","exports","Card","props","className","classes","card","children","QuoteForm","authorInputRef","useRef","textInputRef","useState","isEntering","setisEntering","when","message","location","onFocus","form","onSubmit","event","preventDefault","enteredAuthor","current","value","enteredText","onAddQuote","author","text","isLoading","loading","LoadingSpinner","control","htmlFor","type","id","ref","rows","actions","onClick","AddQuote","useHttp","addQuote","sendRequest","status","error","history","useHistory","console","log","useEffect","push","quoteData"],"mappings":"8EACAA,EAAOC,QAAU,CAAC,KAAO,qB,mBCAzBD,EAAOC,QAAU,CAAC,KAAO,wBAAwB,QAAU,2BAA2B,QAAU,2BAA2B,QAAU,6B,yFCKtHC,EAJF,SAACC,GACZ,OAAO,qBAAKC,UAAWC,IAAQC,KAAxB,SAA+BH,EAAMI,Y,yBCsD/BC,EAlDG,SAACL,GACjB,IAAMM,EAAiBC,mBACjBC,EAAeD,mBACrB,EAAoCE,oBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAoBA,OACE,eAAC,WAAD,WACE,cAAC,IAAD,CAAQC,KAAMF,EAAYG,QAAS,SAACC,GAAD,MAAa,yEAChD,cAAC,EAAD,UACE,uBAAMC,QAZa,WACvBJ,GAAc,IAWuBV,UAAWC,IAAQc,KAAMC,SAtBhE,SAA2BC,GACzBA,EAAMC,iBAEN,IAAMC,EAAgBd,EAAee,QAAQC,MACvCC,EAAcf,EAAaa,QAAQC,MAIzCtB,EAAMwB,WAAW,CAAEC,OAAQL,EAAeM,KAAMH,KAc5C,UACGvB,EAAM2B,WACL,qBAAK1B,UAAWC,IAAQ0B,QAAxB,SACE,cAACC,EAAA,EAAD,MAGN,sBAAK5B,UAAWC,IAAQ4B,QAAxB,UACE,uBAAOC,QAAQ,SAAf,oBACA,uBAAOC,KAAK,OAAOC,GAAG,SAASC,IAAK5B,OAEtC,sBAAKL,UAAWC,IAAQ4B,QAAxB,UACE,uBAAOC,QAAQ,OAAf,kBACA,0BAAUE,GAAG,OAAOE,KAAK,IAAID,IAAK1B,OAEpC,qBAAKP,UAAWC,IAAQkC,QAAxB,SACE,wBAAQC,QAxBc,WAC5B1B,GAAc,IAuBgCV,UAAU,MAAlD,kC,gBCvBKqC,UAnBE,WAEb,MAAuCC,YAAQC,KAAvCC,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,OAAQC,EAA7B,EAA6BA,MAEvBC,EAAUC,cAChBC,QAAQC,IAAIJ,GACZK,qBAAU,WACO,cAAVN,GACCE,EAAQK,KAAK,aAEnB,CAACP,EAAQE,IAMX,OAAO,cAAC,EAAD,CAAWjB,UAAqB,YAAVe,EAAqBlB,WAJ1B,SAAC0B,GACrBT,EAAYS","file":"static/js/6.7ff432c5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__1m44e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"QuoteForm_form__3Ndw9\",\"loading\":\"QuoteForm_loading__iDpS0\",\"control\":\"QuoteForm_control__2lCiE\",\"actions\":\"QuoteForm_actions__354La\"};","import classes from './Card.module.css';\n\nconst Card = (props) => {\n  return <div className={classes.card}>{props.children}</div>;\n};\n\nexport default Card;\n","import { Fragment, useRef, useState } from 'react';\nimport {Prompt} from 'react-router-dom';\n\nimport Card from '../UI/Card';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport classes from './QuoteForm.module.css';\n\nconst QuoteForm = (props) => {\n  const authorInputRef = useRef();\n  const textInputRef = useRef();\n  const [isEntering, setisEntering] = useState(false);\n\n  function submitFormHandler(event) {\n    event.preventDefault();\n\n    const enteredAuthor = authorInputRef.current.value;\n    const enteredText = textInputRef.current.value;\n\n    // optional: Could validate here\n\n    props.onAddQuote({ author: enteredAuthor, text: enteredText });\n  }\n  const formFocusHandler = () => {\n    setisEntering(true);\n  }\n  const finishEnteringHandler = () => {\n    setisEntering(false);\n    \n  }\n  \n  return (\n    <Fragment>\n      <Prompt when={isEntering} message={(location)=> \"Are you sure you want to leave? All your entered data will be lost.\"}/>\n      <Card>\n        <form onFocus={formFocusHandler} className={classes.form} onSubmit={submitFormHandler}>\n          {props.isLoading && (\n            <div className={classes.loading}>\n              <LoadingSpinner />\n            </div>\n          )}\n        <div className={classes.control}>\n          <label htmlFor='author'>Author</label>\n          <input type='text' id='author' ref={authorInputRef} />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor='text'>Text</label>\n          <textarea id='text' rows='5' ref={textInputRef}></textarea>\n        </div>\n        <div className={classes.actions}>\n          <button onClick={finishEnteringHandler} className='btn'>Add Quote</button>\n        </div>\n      </form>\n    </Card>\n    </Fragment>\n  );\n};\n\nexport default QuoteForm;\n","import { useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport QuoteForm from '../components/quotes/QuoteForm';\nimport useHttp from '../Hooks/httpHook';\nimport { addQuote } from '../lib';\n\n\nconst AddQuote = () => {\n\n    const { sendRequest, status, error } = useHttp(addQuote);\n\n    const history = useHistory();\n    console.log(error);\n    useEffect(() => {\n        if(status ===\"completed\") {\n            history.push(\"/quotes\");\n        }\n    },[status, history])\n\n    const addQuoteHandler = (quoteData) => {\n        sendRequest(quoteData);\n    }\n\n    return <QuoteForm isLoading={status ===\"pending\"} onAddQuote={addQuoteHandler}/>\n}\n\nexport default AddQuote;"],"sourceRoot":""}